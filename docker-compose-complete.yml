version: '3.8'

services:
  # Web Servers
  web1:
    build: ./web-servers
    container_name: web-server-1
    environment:
      - SERVER_ID=1
    volumes:
      - web1-data:/app/data
    networks:
      - cloud-network
    restart: unless-stopped

  web2:
    build: ./web-servers
    container_name: web-server-2
    environment:
      - SERVER_ID=2
    volumes:
      - web2-data:/app/data
    networks:
      - cloud-network
    restart: unless-stopped

  web3:
    build: ./web-servers
    container_name: web-server-3
    environment:
      - SERVER_ID=3
    volumes:
      - web3-data:/app/data
    networks:
      - cloud-network
    restart: unless-stopped

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=cloudapp
      - MYSQL_USER=clouduser
      - MYSQL_PASSWORD=cloudpass
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - cloud-network
    restart: unless-stopped

  # HAProxy Load Balancer - Using port 8080 instead of 80
  haproxy:
    build: ./haproxy
    container_name: haproxy-lb
    ports:
      - "8080:80"
      - "8404:8404"
    networks:
      - cloud-network
    depends_on:
      - web1
      - web2
      - web3
    restart: unless-stopped

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - cloud-network
    restart: unless-stopped

  # Node Exporter
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - cloud-network
    restart: unless-stopped

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - cloud-network
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  cloud-network:
    external: true

volumes:
  web1-data:
  web2-data:
  web3-data:
  mysql-data:
  prometheus-data:
  grafana-data:
